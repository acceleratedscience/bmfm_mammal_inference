# Default values for bmfm-mammal-inference-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

buildConfig:
  name: mammal-build
  gitUri: "https://github.com/acceleratedscience/bmfm_mammal_inference.git"
  gitRef: "main"

image:
  repository: bmfm-mammal-inference
  tag: "latest"
  pullPolicy: IfNotPresent

env:
  HF_HOME: "/tmp/.cache/huggingface"  # Set the new variable
  MPLCONFIGDIR: "/tmp/.config/matplotlib"
  LOGGING_CONFIG_PATH: "/tmp/app.log"  # If you want to set a logging path
  gt4sd_local_cache_path: "/data/.openad_models"  # New variable for OpenAD models
  ENABLE_CACHE_RESULTS: "True"  # enable cache for inference results
  ASYNC_ALLOW: "False" # Need shared file system for scaled deployment


nameOverride: "bmfm-mammal-inference"
fullnameOverride: ""

# non root service account
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}

securityContext:
  runAsUser: "appuser"  # or some non-root UID
  runAsNonRoot: true

securityContext: {}

service:
  type: ClusterIP
  # type: NodePort
  port: 80
  targetPort: 8080  # Internal port of your application

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 12000m
    memory: 15Gi
  requests:
    cpu: 1000m
    memory: 3Gi

livenessProbe:
  httpGet:
    path: /health
    port: 8081
  initialDelaySeconds: 10
  periodSeconds: 15
  timeoutSeconds: 10
  successThreshold: 1
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /health
    port: 8080
  initialDelaySeconds: 10
  periodSeconds: 15
  timeoutSeconds: 10
  successThreshold: 1
  failureThreshold: 5

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  - name: s3-data-pvc
    # persistentVolumeClaim:
    #   claimName: s3-data-pvc


# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: s3-data-pvc
    mountPath: "/data"
#     readOnly: true


# init container config to download s3 resources
aws:
  image: "amazon/aws-cli"
  args: # command to run in the init container. # download s3 resources from the public bucket ahead of time.
    # --no-sign-request: sign in anonymously to public bucket
    - "aws s3 sync s3://ad-prod-biomed/molecules/mammal /data/.openad_models/properties/molecules/mammal --no-sign-request"
  region: "us-east-1"

nodeSelector: {}

tolerations: []

affinity: {}
